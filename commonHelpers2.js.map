{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst timeSelector = document.querySelector('input[id=\"datetime-picker\"]');\nconst startButton = document.querySelector('button[data-start]');\nconst daysCounter = document.querySelector('span[data-days]');\nconst hoursCounter = document.querySelector('span[data-hours]');\nconst minutesCounter = document.querySelector('span[data-minutes]');\nconst secondsCounter = document.querySelector('span[data-seconds]');\n\nlet selecteddDate;\nlet diff;\nlet timeIntervalID;\nlet currentDate = new Date();\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    selecteddDate = selectdDate.selectedDates[0];\n    if (currentDate.getTime() > selecteddDate.getTime()) {\n      //alert('Please choose a date in the future');\n      iziToast.show({\n        //title: 'Error',\n        message: '❌ Please choose a date in the future',\n        close: false,\n        backgroundColor: 'red',\n        messageColor: 'white',\n        messageSize: 20,\n        timeout: 0,\n        position: 'topCenter', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\n      });\n      startButton.setAttribute('disabled', true);\n    } else {\n      startButton.removeAttribute('disabled');\n    }\n  },\n};\n\nconst selectdDate = flatpickr(timeSelector, options);\n\nstartButton.setAttribute('disabled', true);\n\ntimeSelector.addEventListener('change', selectDateHandler);\nfunction selectDateHandler() {\n  iziToast.destroy();\n}\n\nstartButton.addEventListener('click', startTimeCountHandler);\n\nfunction startTimeCountHandler() {\n  if (new Date() - selecteddDate > 1000) {\n    iziToast.show({\n      //title: 'Error',\n      message: '❌ Please choose a date in the future',\n      close: false,\n      backgroundColor: 'red',\n      messageColor: 'white',\n      messageSize: 20,\n      timeout: 0,\n      position: 'topCenter', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\n    });\n    startButton.setAttribute('disabled', true);\n    return;\n  }\n  startButton.setAttribute('disabled', true);\n  timeSelector.setAttribute('disabled', true);\n  timeIntervalID = setInterval(() => {\n    currentDate = new Date();\n    const daysLeft = convertMs(\n      selecteddDate.getTime() - currentDate.getTime()\n    ).days;\n    if (daysLeft > 9) {\n      daysCounter.textContent = daysLeft;\n    } else {\n      daysCounter.textContent = addLeadingZero(daysLeft);\n    }\n    hoursCounter.textContent = addLeadingZero(\n      convertMs(selecteddDate.getTime() - currentDate.getTime()).hours\n    );\n    minutesCounter.textContent = addLeadingZero(\n      convertMs(selecteddDate.getTime() - currentDate.getTime()).minutes\n    );\n    secondsCounter.textContent = addLeadingZero(\n      convertMs(selecteddDate.getTime() - currentDate.getTime()).seconds\n    );\n    diff = selecteddDate.getTime() - currentDate.getTime();\n    if (diff < 1000) {\n      clearInterval(timeIntervalID);\n      startButton.removeAttribute('disabled');\n      timeSelector.removeAttribute('disabled');\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n"],"names":["timeSelector","startButton","daysCounter","hoursCounter","minutesCounter","secondsCounter","selecteddDate","diff","timeIntervalID","currentDate","options","selectedDates","selectdDate","iziToast","flatpickr","selectDateHandler","startTimeCountHandler","daysLeft","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"0IAMA,MAAMA,EAAe,SAAS,cAAc,6BAA6B,EACnEC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,iBAAiB,EACtDC,EAAe,SAAS,cAAc,kBAAkB,EACxDC,EAAiB,SAAS,cAAc,oBAAoB,EAC5DC,EAAiB,SAAS,cAAc,oBAAoB,EAElE,IAAIC,EACAC,EACAC,EACAC,EAAc,IAAI,KACtB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5BL,EAAgBM,EAAY,cAAc,GACtCH,EAAY,QAAO,EAAKH,EAAc,QAAO,GAE/CO,EAAS,KAAK,CAEZ,QAAS,uCACT,MAAO,GACP,gBAAiB,MACjB,aAAc,QACd,YAAa,GACb,QAAS,EACT,SAAU,WAClB,CAAO,EACDZ,EAAY,aAAa,WAAY,EAAI,GAEzCA,EAAY,gBAAgB,UAAU,CAEzC,CACH,EAEMW,EAAcE,EAAUd,EAAcU,CAAO,EAEnDT,EAAY,aAAa,WAAY,EAAI,EAEzCD,EAAa,iBAAiB,SAAUe,CAAiB,EACzD,SAASA,GAAoB,CAC3BF,EAAS,QAAO,CAClB,CAEAZ,EAAY,iBAAiB,QAASe,CAAqB,EAE3D,SAASA,GAAwB,CAC/B,GAAI,IAAI,KAASV,EAAgB,IAAM,CACrCO,EAAS,KAAK,CAEZ,QAAS,uCACT,MAAO,GACP,gBAAiB,MACjB,aAAc,QACd,YAAa,GACb,QAAS,EACT,SAAU,WAChB,CAAK,EACDZ,EAAY,aAAa,WAAY,EAAI,EACzC,MACD,CACDA,EAAY,aAAa,WAAY,EAAI,EACzCD,EAAa,aAAa,WAAY,EAAI,EAC1CQ,EAAiB,YAAY,IAAM,CACjCC,EAAc,IAAI,KAClB,MAAMQ,EAAWC,EACfZ,EAAc,QAAO,EAAKG,EAAY,QAAS,CAChD,EAAC,KACEQ,EAAW,EACbf,EAAY,YAAce,EAE1Bf,EAAY,YAAciB,EAAeF,CAAQ,EAEnDd,EAAa,YAAcgB,EACzBD,EAAUZ,EAAc,QAAO,EAAKG,EAAY,QAAS,CAAA,EAAE,KACjE,EACIL,EAAe,YAAce,EAC3BD,EAAUZ,EAAc,QAAO,EAAKG,EAAY,QAAS,CAAA,EAAE,OACjE,EACIJ,EAAe,YAAcc,EAC3BD,EAAUZ,EAAc,QAAO,EAAKG,EAAY,QAAS,CAAA,EAAE,OACjE,EACIF,EAAOD,EAAc,QAAS,EAAGG,EAAY,QAAO,EAChDF,EAAO,MACT,cAAcC,CAAc,EAC5BP,EAAY,gBAAgB,UAAU,EACtCD,EAAa,gBAAgB,UAAU,EAE1C,EAAE,GAAI,CACT,CAEA,SAASkB,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}